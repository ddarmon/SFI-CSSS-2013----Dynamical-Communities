%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1108.000000 1062.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.8.4 (Build 12E55) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1108 1062
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1108 1062
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 0 1108 1062 rc
-242.5 1244.5 m
1485.5 1244.5 l
1485.5 -221.5 l
-242.5 -221.5 l
h
-242.5 1244.5 m
f
0.80000001 1 0.40000001 sc
716.06409 688.99933 m
789.4826 611.95483 908.5174 611.95483 981.93591 688.99933 c
1055.3549 766.04346 1055.3549 890.95654 981.93591 968.00067 c
908.5174 1045.0452 789.4826 1045.0452 716.06409 968.00067 c
642.6452 890.95654 642.6452 766.04346 716.06409 688.99933 c
f
6 w
1 J
1 j
0 0 0 sc
1 0 0 -1 -242 1244 cm
958.06409 555.00067 m
1031.4825 632.04517 1150.5175 632.04517 1223.9359 555.00067 c
1297.3549 477.95657 1297.3549 353.04346 1223.9359 275.99936 c
1150.5175 198.95483 1031.4825 198.95483 958.06409 275.99936 c
884.6452 353.04346 884.6452 477.95657 958.06409 555.00067 c
S
1 0.80000001 0.40000001 sc
CM
468.17325 99.687973 m
563.07056 0.10384 716.92944 0.10384 811.82678 99.687973 c
906.72455 199.27159 906.72455 360.72842 811.82678 460.31204 c
716.92944 559.89618 563.07056 559.89618 468.17325 460.31204 c
373.27542 360.72842 373.27542 199.27159 468.17325 99.687973 c
f
0 0 0 sc
1 0 0 -1 -242 1244 cm
710.17322 1144.312 m
805.07056 1243.8961 958.92944 1243.8961 1053.8268 1144.312 c
1148.7246 1044.7284 1148.7246 883.27161 1053.8268 783.68799 c
958.92944 684.10382 805.07056 684.10382 710.17322 783.68799 c
615.27545 883.27161 615.27545 1044.7284 710.17322 1144.312 c
S
0.40000001 1 1 sc
CM
143.17325 567.68799 m
238.07057 468.10385 391.92941 468.10385 486.82675 567.68799 c
581.72455 667.27161 581.72455 828.72839 486.82675 928.31201 c
391.92941 1027.8961 238.07057 1027.8961 143.17325 928.31201 c
48.275425 828.72839 48.275425 667.27161 143.17325 567.68799 c
f
0 0 0 sc
1 0 0 -1 -242 1244 cm
385.17325 676.31201 m
480.07059 775.89618 633.92944 775.89618 728.82678 676.31201 c
823.72455 576.72839 823.72455 415.27158 728.82678 315.68796 c
633.92944 216.10384 480.07059 216.10384 385.17325 315.68796 c
290.27542 415.27158 290.27542 576.72839 385.17325 676.31201 c
S
389.69064 410.93436 m
403.94476 425.18857 427.05524 425.18857 441.30936 410.93436 c
455.56357 396.68024 455.56357 373.56976 441.30936 359.31564 c
427.05524 345.06143 403.94476 345.06143 389.69064 359.31564 c
375.43643 373.56976 375.43643 396.68024 389.69064 410.93436 c
S
628.69061 506.68436 m
642.94476 520.93854 666.05524 520.93854 680.30939 506.68436 c
694.56354 492.43024 694.56354 469.31976 680.30939 455.06564 c
666.05524 440.81143 642.94476 440.81143 628.69061 455.06564 c
614.43646 469.31976 614.43646 492.43024 628.69061 506.68436 c
S
435.69064 632.18439 m
449.94476 646.43854 473.05524 646.43854 487.30936 632.18439 c
501.56357 617.93024 501.56357 594.81976 487.30936 580.56561 c
473.05524 566.31146 449.94476 566.31146 435.69064 580.56561 c
421.43643 594.81976 421.43643 617.93024 435.69064 632.18439 c
S
638.69061 679.68439 m
652.94476 693.93854 676.05524 693.93854 690.30939 679.68439 c
704.56354 665.43024 704.56354 642.31976 690.30939 628.06561 c
676.05524 613.81146 652.94476 613.81146 638.69061 628.06561 c
624.43646 642.31976 624.43646 665.43024 638.69061 679.68439 c
S
7 w
423.54132 423.80203 m
447.77945 540.38208 l
S
CM
209.36205 686.38641 m
212.24126 704.96136 l
199.31763 702.27441 l
h
209.36205 686.38641 m
f
0 J
0 j
1 0 0 -1 -242 1244 cm
451.36203 557.61359 m
454.24127 539.03864 l
441.31763 541.72559 l
h
451.36203 557.61359 m
S
1 J
1 j
617.8244 466.18176 m
478.07446 410.19406 l
S
CM
219.73682 840.35126 m
233.61998 827.67932 l
238.52896 839.93256 l
h
219.73682 840.35126 m
f
0 J
0 j
1 0 0 -1 -242 1244 cm
461.73682 403.64874 m
475.62 416.32068 l
480.52896 404.06744 l
h
461.73682 403.64874 m
S
1 J
1 j
442.34607 414.10043 m
618.69202 604.43365 l
S
CM
388.65366 626.65594 m
381.53342 644.052 l
371.85059 635.08075 l
h
388.65366 626.65594 m
f
0 J
0 j
1 0 0 -1 -242 1244 cm
630.65363 617.34406 m
623.53339 599.948 l
613.85059 608.91925 l
h
630.65363 617.34406 m
S
1 J
1 j
[
7
28
] 0 d
366 218.21606 m
396.33426 320.50012 l
S
CM
159.33846 906.62628 m
160.66187 925.37646 l
148.00667 921.62329 l
h
159.33846 906.62628 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -242 1244 cm
401.33844 337.37372 m
402.66187 318.62357 l
390.00668 322.37671 l
h
401.33844 337.37372 m
S
1 J
1 j
[
7
28
] 0 d
972.90594 411.30731 m
720.35101 466.48737 l
S
CM
461.15665 773.75586 m
479.75983 771.06476 l
476.94226 783.96051 l
h
461.15665 773.75586 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -242 1244 cm
703.15668 470.24414 m
721.75983 472.93527 l
718.94226 460.03949 l
h
703.15668 470.24414 m
S
1 J
1 j
[
7
28
] 0 d
678.28156 690.90228 m
721.98633 808.32513 l
S
CM
486.12558 419.18033 m
486.17178 437.97708 l
473.80087 433.37265 l
h
486.12558 419.18033 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -242 1244 cm
728.12561 824.81964 m
728.17175 806.02289 l
715.8009 810.62738 l
h
728.12561 824.81964 m
S
1 J
1 j
499.96597 615.37567 m
598.8678 638.5177 l
S
CM
374.00491 601.47235 m
358.37152 611.90869 l
355.36407 599.05585 l
h
374.00491 601.47235 m
f
0 J
0 j
1 0 0 -1 -242 1244 cm
616.00488 642.52765 m
600.37152 632.09131 l
597.36407 644.94415 l
h
616.00488 642.52765 m
S
6 w
1 J
1 j
719.69061 897.30939 m
733.94476 911.56354 757.05524 911.56354 771.30939 897.30939 c
785.56354 883.05524 785.56354 859.94476 771.30939 845.69061 c
757.05524 831.43646 733.94476 831.43646 719.69061 845.69061 c
705.43646 859.94476 705.43646 883.05524 719.69061 897.30939 c
S
737.69061 1054.3093 m
751.94476 1068.5636 775.05524 1068.5636 789.30939 1054.3093 c
803.56354 1040.0553 803.56354 1016.9448 789.30939 1002.6906 c
775.05524 988.43646 751.94476 988.43646 737.69061 1002.6906 c
723.43646 1016.9448 723.43646 1040.0553 737.69061 1054.3093 c
S
899.69061 931.30939 m
913.94476 945.56354 937.05524 945.56354 951.30939 931.30939 c
965.56354 917.05524 965.56354 893.94476 951.30939 879.69061 c
937.05524 865.43646 913.94476 865.43646 899.69061 879.69061 c
885.43646 893.94476 885.43646 917.05524 899.69061 931.30939 c
S
899.69061 1127.3093 m
913.94476 1141.5636 937.05524 1141.5636 951.30939 1127.3093 c
965.56354 1113.0553 965.56354 1089.9447 951.30939 1075.6907 c
937.05524 1061.4364 913.94476 1061.4364 899.69061 1075.6907 c
885.43646 1089.9447 885.43646 1113.0553 899.69061 1127.3093 c
S
1009.6906 1033.3093 m
1023.9448 1047.5636 1047.0553 1047.5636 1061.3093 1033.3093 c
1075.5636 1019.0552 1075.5636 995.94476 1061.3093 981.69061 c
1047.0553 967.43646 1023.9448 967.43646 1009.6906 981.69061 c
995.43646 995.94476 995.43646 1019.0552 1009.6906 1033.3093 c
S
985.69061 428.68436 m
999.94476 442.93857 1023.0552 442.93857 1037.3093 428.68436 c
1051.5636 414.43024 1051.5636 391.31976 1037.3093 377.06564 c
1023.0552 362.81143 999.94476 362.81143 985.69061 377.06564 c
971.43646 391.31976 971.43646 414.43024 985.69061 428.68436 c
S
1093.6907 514.68439 m
1107.9447 528.93854 1131.0553 528.93854 1145.3093 514.68439 c
1159.5636 500.43024 1159.5636 477.31976 1145.3093 463.06564 c
1131.0553 448.81143 1107.9447 448.81143 1093.6907 463.06564 c
1079.4364 477.31976 1079.4364 500.43024 1093.6907 514.68439 c
S
1117.6907 367.93436 m
1131.9447 382.18857 1155.0553 382.18857 1169.3093 367.93436 c
1183.5636 353.68024 1183.5636 330.56976 1169.3093 316.31564 c
1155.0553 302.06143 1131.9447 302.06143 1117.6907 316.31564 c
1103.4364 330.56976 1103.4364 353.68024 1117.6907 367.93436 c
S
7 w
1137.1243 381.10983 m
1130.3788 422.35596 l
S
CM
885.53815 804.27478 m
894.89221 820.5788 l
881.8653 822.70929 l
h
885.53815 804.27478 m
f
0 J
0 j
1 0 0 -1 -242 1244 cm
1127.5381 439.72522 m
1136.8922 423.4212 l
1123.8652 421.29071 l
h
1127.5381 439.72522 m
S
1 J
1 j
1107.6088 358.64316 m
1072.736 374.69254 l
S
CM
814.74792 861.94934 m
833.4953 863.31195 l
827.97668 875.30298 l
h
814.74792 861.94934 m
f
0 J
0 j
1 0 0 -1 -242 1244 cm
1056.7479 382.05066 m
1075.4952 380.68805 l
1069.9767 368.69702 l
h
1056.7479 382.05066 m
S
1 J
1 j
1042.4026 427.48264 m
1066.7717 446.8877 l
S
CM
838.53992 786.1488 m
828.88306 802.27533 l
820.66046 791.94928 l
h
838.53992 786.1488 m
f
0 J
0 j
1 0 0 -1 -242 1244 cm
1080.5399 457.8512 m
1070.8831 441.72464 l
1062.6604 452.05075 l
h
1080.5399 457.8512 m
S
1 J
1 j
784.31714 878.83209 m
859.2677 892.98944 l
S
CM
634.56183 347.74387 m
618.49268 357.49588 l
616.04266 344.52524 l
h
634.56183 347.74387 m
f
0 J
0 j
1 0 0 -1 -242 1244 cm
876.56183 896.2561 m
860.49268 886.50415 l
858.04266 899.47479 l
h
876.56183 896.2561 m
S
1 J
1 j
925.5 945 m
925.5 1034.1 l
S
CM
683.5 192.30002 m
690.10004 209.90002 l
676.90002 209.90002 l
h
683.5 192.30002 m
f
0 J
0 j
1 0 0 -1 -242 1244 cm
925.5 1051.7 m
932.10004 1034.1 l
918.90002 1034.1 l
h
925.5 1051.7 m
S
1 J
1 j
954.46442 932.35791 m
986.07739 961.67175 l
S
CM
756.98291 270.3613 m
748.565 287.16782 l
739.58978 277.48865 l
h
756.98291 270.3613 m
f
0 J
0 j
1 0 0 -1 -242 1244 cm
998.98291 973.63867 m
990.565 956.83221 l
981.58978 966.51135 l
h
998.98291 973.63867 m
S
1 J
1 j
794.96307 1004.6114 m
871.8161 946.26001 l
S
CM
643.83356 308.38287 m
625.82501 302.99652 l
633.80719 292.48343 l
h
643.83356 308.38287 m
f
0 J
0 j
1 0 0 -1 -242 1244 cm
885.83356 935.61713 m
867.82501 941.00348 l
875.80719 951.51654 l
h
885.83356 935.61713 m
S
1 J
1 j
889.47845 1085.2681 m
824.95831 1056.1942 l
S
CM
566.91217 195.03648 m
580.24683 181.78853 l
585.6698 193.82312 l
h
566.91217 195.03648 m
f
0 J
0 j
1 0 0 -1 -242 1244 cm
808.91217 1048.9635 m
822.24683 1062.2114 l
827.6698 1050.1769 l
h
808.91217 1048.9635 m
S
1 J
1 j
[
7
28
] 0 d
1102.5044 524.54272 m
1027 683 l
953.47748 844.1701 l
S
CM
704.17285 383.81732 m
717.48218 397.09067 l
705.47272 402.56912 l
h
704.17285 383.81732 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -242 1244 cm
946.17285 860.18268 m
959.48218 846.90936 l
947.47272 841.43085 l
h
946.17285 860.18268 m
S
1 J
1 j
[
7
28
] 0 d
1342 190 m
1196.9999 301.12411 l
S
CM
941.03046 932.1701 m
959.01459 937.63733 l
950.98523 948.11444 l
h
941.03046 932.1701 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -242 1244 cm
1183.0305 311.82993 m
1201.0146 306.36267 l
1192.9852 295.88556 l
h
1183.0305 311.82993 m
S
1 J
1 j
[
7
28
] 0 d
1066.7572 1031.6567 m
1215.9243 1146.9391 l
S
CM
987.85022 86.298485 m
977.96027 102.28313 l
969.88843 91.838737 l
h
987.85022 86.298485 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -242 1244 cm
1229.8502 1157.7015 m
1219.9603 1141.7169 l
1211.8884 1152.1613 l
h
1229.8502 1157.7015 m
S
1 J
1 j
[
7
28
] 0 d
498 1236 m
710.39185 1070.0063 l
S
CM
482.25909 184.8315 m
464.32764 179.19385 l
472.45605 168.79341 l
h
482.25909 184.8315 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -242 1244 cm
724.25909 1059.1685 m
706.32764 1064.8062 l
714.45605 1075.2065 l
h
724.25909 1059.1685 m
S
1 J
1 j
[
7
28
] 0 d
904.24548 872.19672 m
690.76422 537.69672 l
S
CM
439.29572 721.13928 m
443.20071 702.75256 l
454.32773 709.85394 l
h
439.29572 721.13928 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -242 1244 cm
681.29572 522.86072 m
685.20068 541.24744 l
696.3277 534.14606 l
h
681.29572 522.86072 m
S
1 J
1 j
[
7
28
] 0 d
765.0033 837.14014 m
978.22418 461.49857 l
S
CM
744.91223 797.80756 m
730.48438 785.75946 l
741.96399 779.24341 l
h
744.91223 797.80756 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -242 1244 cm
986.91223 446.19241 m
972.48438 458.24054 l
983.96399 464.75659 l
h
986.91223 446.19241 m
S
1 0.40000001 0.40000001 sc
CM
32.117992 138.22495 m
69.608299 59.92448 130.39204 59.92448 167.88234 138.22495 c
205.37283 216.52501 205.37283 343.4744 167.88234 421.77444 c
130.39204 500.07492 69.608299 500.07492 32.117992 421.77444 c
-5.3725042 343.4744 -5.3725042 216.52501 32.117992 138.22495 c
f
6 w
1 J
1 j
0 0 0 sc
1 0 0 -1 -242 1244 cm
274.11798 1105.775 m
311.60831 1184.0756 372.39203 1184.0756 409.88235 1105.775 c
447.37283 1027.475 447.37283 900.52563 409.88235 822.22552 c
372.39203 743.92511 311.60831 743.92511 274.11798 822.22552 c
236.6275 900.52563 236.6275 1027.475 274.11798 1105.775 c
S
316.19064 884.80939 m
330.44476 899.06354 353.55524 899.06354 367.80936 884.80939 c
382.06357 870.55524 382.06357 847.44476 367.80936 833.19061 c
353.55524 818.93646 330.44476 818.93646 316.19064 833.19061 c
301.93643 847.44476 301.93643 870.55524 316.19064 884.80939 c
S
316.19064 1072.8093 m
330.44476 1087.0636 353.55524 1087.0636 367.80936 1072.8093 c
382.06357 1058.5553 382.06357 1035.4447 367.80936 1021.1906 c
353.55524 1006.9365 330.44476 1006.9365 316.19064 1021.1906 c
301.93643 1035.4447 301.93643 1058.5553 316.19064 1072.8093 c
S
7 w
342 898.5 m
342 979.59998 l
S
CM
100 246.80002 m
106.6 264.40002 l
93.400002 264.40002 l
h
100 246.80002 m
f
0 J
0 j
1 0 0 -1 -242 1244 cm
342 997.19995 m
348.60001 979.59998 l
335.39999 979.59998 l
h
342 997.19995 m
S
1 J
1 j
[
7
28
] 0 d
358.89468 823.28436 m
432.67514 667.31128 l
S
CM
198.20099 592.59851 m
184.70897 579.51093 l
196.64131 573.86658 l
h
198.20099 592.59851 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -242 1244 cm
440.20099 651.40149 m
426.70895 664.48907 l
438.6413 670.13342 l
h
440.20099 651.40149 m
S
1 J
1 j
[
7
28
] 0 d
381.4812 860.22308 m
678.1322 869.41302 l
S
CM
453.72375 374.04202 m
436.33655 381.18381 l
435.92783 367.99014 l
h
453.72375 374.04202 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -242 1244 cm
695.72375 869.95801 m
678.33655 862.81616 l
677.92786 876.00983 l
h
695.72375 869.95801 m
S
ep
end
%%Trailer
%%EOF
